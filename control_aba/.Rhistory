setwd("~/UI/control_aba")
library(DESeq2)
library(tidyverse)
library(airway)
counts_data <- read.csv('aba_control.csv', row.names=1)
counts_data <- read.csv('control_aba.csv', row.names=1)
col_Data <- read.csv('sample_info_ACC.csv',row.names=1)
all(colnames(counts_data) %in% rownames(col_Data))
counts_data <- read.csv('control_aba.csv', row.names=1)
col_Data <- read.csv('sample_info_ACC.csv',row.names=1)
all(colnames(counts_data) %in% rownames(col_Data))
counts_data <- read.csv('control_aba.csv', row.names=1)
col_Data <- read.csv('sample_info_CA.csv',row.names=1)
all(colnames(counts_data) %in% rownames(col_Data))
all(colnames(counts_data) %in% rownames(col_Data))
col_Data <- read.csv('sample_info_CA.csv',row.names=1)
all(colnames(counts_data) %in% rownames(col_Data))
counts_data <- read.csv('control_aba.csv', row.names=1)
col_Data <- read.csv('sample_info_CA.csv',row.names=1)
all(colnames(counts_data) %in% rownames(col_Data))
counts_data <- read.csv('control_aba.csv', row.names=1)
col_Data <- read.csv('sample_info_CA.csv',row.names=1)
all(colnames(counts_data) %in% rownames(col_Data))
rounded_count_data = round(counts_data)
write
dds <- DESeqDataSetFromMatrix(countData = rounded_count_data,
colData = col_Data,
design = ~ group)
dds
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
dds
ddsN<- estimateSizeFactors(dds)
ddsN<- estimateDispersions(ddsN)
ddsN
ddsDE<- DESeq(ddsN)
Ndds<- counts(ddsDE, normalized=T)
write.csv(Ndds, "normalizado_control_Aba.csv")
write.csv(Ndds, "normalizado_control_aba.csv")
write.csv(res, "results_control_aba.csv")
res <- results(ddsDE, alpha = 0.05)
res
write.csv(res, "results_control_aba.csv")
library(ggplot2)
library(pheatmap)
normCount <- read.csv('normalizado_control_aba.csv', row.names = 1)
deSeqRes <- read.csv('results_control_aba.csv', row.names =1)
deSeqResUp <-subset(deSeqRes, log2FoldChange >= 1)
deSeqResDown <-subset(deSeqRes, log2FoldChange <=-1)
deSeqREsCon<-rbind(deSeqResDown, deSeqResUp)
deSeqResSigni <- subset(deSeqREsCon, padj <= 0.05)
allsig <- merge(normCount, deSeqResSigni, by = 0)
write.csv(allsig, 'allsig_control_aba.csv')
signifiCount <- allsig[,2:5]
row.names(signifiCount) <-allsig$Row.names
pheatmap(log2(signifiCount+1), scale ='row', show_rownames = F, color=colorRampPalette(c("navy","white","red"))(50))
deSeqResDown_ <-subset(deSeqResSigni, log2FoldChange <=-1)
deSeqResUp_ <-subset(deSeqResSigni, log2FoldChange >= 1)
deSeqResDown_merge<-merge(normCount, deSeqResDown_, by = 0)
write.csv(deSeqResDown_merge,'deseq_aba_cold_cold_down_sig.csv')
######## PARA GENES SOBREEXPRESADOS
#Se unen por filas hacia abajo
deSeqResUp_merge <-merge(normCount, deSeqResUp_, by = 0)
#La dataframe de genes SOBREEXPRESADOS es guardada como csv
write.csv(deSeqResUp_merge, 'deseq_aba_cold_cold_up_sig.csv')
deSeqResDown_ <-subset(deSeqResSigni, log2FoldChange <=-1)
deSeqResUp_ <-subset(deSeqResSigni, log2FoldChange >= 1)
deSeqResDown_merge<-merge(normCount, deSeqResDown_, by = 0)
write.csv(deSeqResDown_merge,'deseq_control_aba_down_sig.csv')
######## PARA GENES SOBREEXPRESADOS
#Se unen por filas hacia abajo
deSeqResUp_merge <-merge(normCount, deSeqResUp_, by = 0)
#La dataframe de genes SOBREEXPRESADOS es guardada como csv
write.csv(deSeqResUp_merge, 'deseq_control_aba_up_sig.csv')
